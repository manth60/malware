package pom;

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.apache.poi.util.SystemOutLogger;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.aventstack.extentreports.Status;
import generic.BaseTest;


public class AnnexurePageTest extends BaseTest{
	//body[contains(@class,'windows desktop pace-done')]/nav[1]/div[1]
	//Clicking on the scroll bar//body/nav[2]/div[2]/div[1]/ul[1]/li[3]/a[1]/span[1]
	@FindBy(xpath="(//nav[@class='page-sidebar']//div[@class='sidebar-header'])[1]")
	private WebElement ScrollBar;

	//body/nav[2]/div[2]/div[1]/ul[1]/li[3]/a[1]/span[1]
	//Clicking on the Annexure under side menu//ul[contains(@class,'menu-items scroll-content scroll-scrolly_visible')]/li/a/span[text()='Annexures']
//	@FindBy(xpath="//body[contains(@class,'pace-done')]/nav[2]/div[2]/div[1]/ul/li/a/span[text()='Annexures']")
	//private WebElement Annexures;

	//Changes by Manthan
	@FindBy(linkText="Annexures")
	private WebElement Annexures;
	
	
	
	//Clicking on the Annexures side menu
	@FindBy(xpath="//ul[@style='display: block;']/li/a/span[contains(text(),' Add Annexures')]")
	private WebElement AddAnnexures;

	//Clicking on the Add New Annexure Button
	@FindBy(xpath="//a[@id='new_annxure']")
	private WebElement AddNewAnnexureBTN;

	//clicking on the Annexure Name Drop down list
	@FindBy(xpath="//div[@id='s2id_annexure_name']/a/span[@class='select2-chosen']")
	private WebElement AnnexureNameDropDown;

	//Passing the Values to Annexure Name Drop down List
	@FindBy(xpath="//div[@id='select2-drop']//div[@class='select2-search']/input[@type='text']")
	private WebElement SetAnnexureNameDropDown;

	//Passing the Values to applied in group
	@FindBy(xpath="//div[@id='s2id_applied_groups']//ul/li/input")
	private WebElement AppliedInGroups;

	//Passing the Values to Audit Type drop down
	@FindBy(xpath="//div[@id='s2id_applied_audit_types']//ul/li/input")
	private WebElement AuditTypes;

	//Passing the values to Annexure name
	@FindBy(xpath="//input[@id='annexure_name']")
	private WebElement AnnexureName;

	//Clicking on the Dynamic Radio Button
	@FindBy(xpath="//input[@id='no']")
	private WebElement DynamicRadioButton;

	//Clikcing on the Static radio Button
	@FindBy(xpath="//input[@id='yes']")
	private WebElement StaticRadioButton;

	//clicking on the Static Radio Button
	@FindBy(xpath="//label[@for='yes']")
	private WebElement StaticRadioBTN;

	//clicking on the Dynamic Radio Button
	@FindBy(xpath="//label[@for='no']")
	private WebElement DynamicRadioBTN;

	//Clikcing on the Add Button
	@FindBy(xpath="//a[@data-target='#annexure_data']")
	private WebElement AddBTN1;

	//Clicking on the Add Button 
	@FindBy(xpath="//a[@data-target='#configure_column_data']")
	private WebElement AddBTN2;

	//clicking on the PrimaryIdentifier
	@FindBy(xpath="//div[@id='s2id_primary_identifier']/a/span[@class='select2-chosen']")
	private WebElement PrimaryIdentifier;

	//Passing the Values to Primery Identifier
	@FindBy(xpath="//div[@id='select2-drop']//div[@class='select2-search']/input[@type='text']")
	private WebElement SetPrimaryIdentifier;

	//clicking on the Save Button
	@FindBy(xpath="//input[@value='Save']")
	private WebElement SaveBTN;

	//Clicking on the Cancel Button
	@FindBy(xpath="//button[text()='Cancel']")
	private WebElement CancelBTN;

	//passing the Value to Enter attribute index
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[1]/td//input[@placeholder='Enter attribute index']")
	private WebElement FirstAttributeindex;

	//passing the Value to Enter attribute index
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[2]/td//input[@placeholder='Enter attribute index']")
	private WebElement SecondAttributeindex;

	//passing the Value to Enter attribute index
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[3]/td//input[@placeholder='Enter attribute index']")
	private WebElement ThirdAttributeindex;

	//passing the Value to Enter attribute index
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[4]/td//input[@placeholder='Enter attribute index']")
	private WebElement FourthAttributeindex;

	//passing the Value to Enter attribute index
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[5]/td//input[@placeholder='Enter attribute index']")
	private WebElement FifthAttributeindex;

	//Passing the Values to first Attribute name
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[1]/td//input[@placeholder='Enter attribute name']")
	private WebElement FirstAttributeName;

	//Passing the Values to second Attribute Name
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[2]/td//input[@placeholder='Enter attribute name']")
	private WebElement SecondAttributeName;

	//Passing the Values to Thired Attribute Name
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[3]/td//input[@placeholder='Enter attribute name']")
	private WebElement ThiredAttributeName;

	//Passing the Values to Fourth Attribute Name
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[4]/td//input[@placeholder='Enter attribute name']")
	private WebElement FourthAttributeName;

	//Passing the Values to Fifth Attribute Name
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[5]/td//input[@placeholder='Enter attribute name']")
	private WebElement FifthAttributeName;

	//Clicking on the Second Input//div[@id='s2id_annexure_annexure_configurations_attributes_1553853166266_configure_type']
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[2]/td//span[@class='select2-chosen']")
	private WebElement SecondInput;

	//Clicking on the Third Input
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[3]/td//span[@class='select2-chosen']")
	private WebElement ThiredInput;

	//Clicking on the Fourth Input
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[4]/td//span[@class='select2-chosen']")
	private WebElement FourthInput;

	//Clicking on the Fifth Input
	@FindBy(xpath="//table[@id='annexure_table']/tbody/tr[5]/td//span[@class='select2-chosen']")
	private WebElement FifthInput;

	//passing the Values to Search Button
	@FindBy(xpath="//input[@type='search']")
	private WebElement SearchBTN;

	//Passing the Values to 1st Reason
	@FindBy(xpath="//table[@id='configure_reason_table']/tbody/tr[1]/td[1]/input[@placeholder='Enter reason here']")
	private WebElement SetReason1;

	//Passing the Values to 2nd Reason
	@FindBy(xpath="//table[@id='configure_reason_table']/tbody/tr[2]/td[1]/input[@placeholder='Enter reason here']")
	private WebElement SetReason2;

	//Passing the Values to 3rd Reason
	@FindBy(xpath="//table[@id='configure_reason_table']/tbody/tr[3]/td[1]/input[@placeholder='Enter reason here']")
	private WebElement SetReason3;

	//clicking on the Matched
	@FindBy(xpath="//span[contains(@class,'select2-match')]")
	private WebElement Matched;

	//Clicking on the edit Button
	@FindBy(xpath="//table[@id='tableWithSearch']/tbody/tr[1]/td/a[@class='btn btn-rounded btn-primary']")
	private WebElement EditBTN;

	//Checking Annexure Name contain special characters Error Message
	@FindBy(xpath="//li[contains(text(),'Annexure Name contain special characters')]")
	private WebElement AnnexureNameError;

	//Checking Annexure Name contain special characters Error Message
	@FindBy(xpath="//li[contains(text(),'Attribute Name contain special characters')]")
	private WebElement AttributeNameError;

	//clicking on the Delete Button
	@FindBy(xpath="//table[@id='tableWithSearch']/tbody/tr[1]//td/a[@class='btn btn-rounded btn-danger']")
	private WebElement DeleteBTN;

	//clicking on Ok Button
	@FindBy(xpath="//a[contains(text(),'OK')]")
	private WebElement OKBTN;


	public AnnexurePageTest(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}

	public void ClickScrollBar(WebDriver driver)
	{
		Actions action = new Actions(driver);	
		action.moveToElement(ScrollBar).click().build().perform();
	}

	public void ClickAnnexure(WebDriver driver)
	{
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", Annexures);
	}

	public void ClickAddAnnexures(WebDriver driver)
	{  
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", AddAnnexures);
	}

	public void ClickAddNewAnnexureBTN(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 10);
		wait.until(ExpectedConditions.visibilityOf(AddNewAnnexureBTN)).click();
		System.out.println("Add New Annexure Button is Clicked");
		chiledTest.log(Status.INFO, "Add New Annexure Button is Clicked");
	}

	public void ClickAnnexureNameDropDown()
	{
		try{
			AnnexureNameDropDown.click();
			System.out.println("Annexure Name drop down is Clicked");
		}catch (Exception e) {

		}

	}

	public void ClickDeleteButton() throws InterruptedException
	{
		Thread.sleep(2000);
		DeleteBTN.click();
		System.out.println("Delete button is Clicked");
		chiledTest.log(Status.INFO, "Delete button is Clicked");
	}

	public void SetAnnexureName(String AN)
	{
		WebDriverWait wait = new WebDriverWait(driver,15);
		wait.until(ExpectedConditions.visibilityOf(AnnexureName)).clear();
		wait.until(ExpectedConditions.visibilityOf(AnnexureName)).sendKeys(AN);
		System.out.println("Entered Annexure Name is : " + AN);
		chiledTest.log(Status.INFO, "Annexure Name is Selected under the Annexure name drop down list");
	}

	public void ClickDynamicRadioBTN()
	{
		DynamicRadioBTN.click();
	}

	public void ClickStaticRadioBTN()
	{
		StaticRadioBTN.click();
	}

	public void ClickAddButton1()
	{
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", AddBTN1);
		System.out.println("+ Button is Clicked");
		chiledTest.log(Status.INFO, "+ Button is Clicked");
	}

	public void ClickAddBTN2()
	{
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", AddBTN2);
		System.out.println("+ Button is Clicked");
		chiledTest.log(Status.INFO, "+ Button is Clicked");
	}


	public void SetFirstAttributeIndex(String FI) throws InterruptedException
	{
		Thread.sleep(1000);
		FirstAttributeindex.sendKeys(FI);
		System.out.println("Entered Attribute Name is : " + FI);
		chiledTest.log(Status.INFO, "1st Attribute Index Is Entered");
	}

	public void SetSecondAttributeIndex(String SI) throws InterruptedException
	{
		Thread.sleep(1000);
		SecondAttributeindex.sendKeys(SI);
		System.out.println("Entered Attribute Name is : " + SI);
		chiledTest.log(Status.INFO, "2nd Attribute Index Is Entered");
	}

	public void SetThiredAttributeIndex(String TI) throws InterruptedException
	{
		Thread.sleep(1000);
		ThirdAttributeindex.sendKeys(TI);
		System.out.println("Entered Attribute Name is : " + TI);
		chiledTest.log(Status.INFO, "3rd Attribute Index Is Entered");
	}

	public void SetFourthAttributIndex(String FHI) throws InterruptedException
	{
		Thread.sleep(1000);
		FourthAttributeindex.sendKeys(FHI);
		System.out.println("Entered Attribute Name is : " + FHI);
		chiledTest.log(Status.INFO, "4th Attribute Index Is Entered");
	}

	public void SetFifthAttributIndex(String FHI) throws InterruptedException
	{
		Thread.sleep(1000);
		FifthAttributeindex.sendKeys(FHI);
		System.out.println("Entered Attribute Name is : " + FHI);
		chiledTest.log(Status.INFO, "5th Attribute Index Is Entered");
	}


	public void SetFirstAttributeName(String FAN)
	{
		FirstAttributeName.sendKeys(FAN);
		System.out.println("Entered Attribute Name is : " + FAN);
	}

	public void SetSecondAttributeName(String SAN)
	{
		SecondAttributeName.sendKeys(SAN);
		System.out.println("Entered Attribute Name is : " + SAN);
	}

	public void SetThiredAttributeName(String TAN)
	{
		ThiredAttributeName.sendKeys(TAN);
		System.out.println("Entered Attribute Name is : " + TAN);
	}

	public void SetFourthAttributeName(String FAN)
	{
		FourthAttributeName.sendKeys(FAN);
		System.out.println("Entered Attribute Name is : " + FAN);
	}

	public void SetFifthAttributeName(String FAN)
	{
		FifthAttributeName.sendKeys(FAN);
		System.out.println("Entered Attribute Name is : " + FAN);
	}

	public void ClickSecondInput(WebDriver driver)
	{

		SecondInput.click();
	}

	public void ClickThiredInput()
	{
		ThiredInput.click();
	}

	public void ClickFourthInput()
	{
		FourthInput.click();
	}

	public void ClickFifthInput()
	{
		FifthInput.click();
	}

	public void ClickPrimaryIdentifier()
	{
		PrimaryIdentifier.click();
	}

	public void SetPrimaryIdentifier(String PI)
	{
		SetPrimaryIdentifier.sendKeys(PI);
		System.out.println("Entered Primery Identifier is : " + PI);
	}

	public void ClickSaveBTN(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 10);
		wait.until(ExpectedConditions.visibilityOf(SaveBTN));
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", SaveBTN);

	}

	public void SetAnnexureNameDropDown(String AN)
	{
		SetAnnexureNameDropDown.sendKeys(AN);
		System.out.println("Selected Annexure Name is : " + AN);
		chiledTest.log(Status.INFO, "Annexure Name is Selected under Annexure name drop down list");
	}

	public void SetAppliedInGroups(String AG)
	{
		AppliedInGroups.sendKeys(AG);
		System.out.println("Entered Group Name in Applied in group is : " + AG);

	}

	public void SetAuditType(String AT)
	{
		AuditTypes.sendKeys(AT);
		System.out.println("Entered Audit Type Name is : " + AT);

	}


	public void ClickCancelBTN(WebDriver driver)
	{
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", CancelBTN);
	}

	public void SetSearchBTN(String SB)
	{
		SearchBTN.sendKeys(SB);
		System.out.println("searched Annexure Name is : " + SB);
	}

	public void ClearSearchBTN()
	{
		SearchBTN.sendKeys(Keys.CLEAR);
	}

	public void SetReason1(String SR)
	{
		SetReason1.clear();
		SetReason1.sendKeys(SR);
		System.out.println("Entered CONFIGURE NOT FOUND COLUMNS Reason is : " + SR);
	}

	public void SetReason2(String SR)
	{
		SetReason2.clear();	
		SetReason2.sendKeys(SR);
		System.out.println("Entered CONFIGURE NOT FOUND COLUMNS Reason is : " + SR);
	}

	public void SetReason3(String SR)
	{
		SetReason3.clear();	
		SetReason3.sendKeys(SR);
		System.out.println("Entered CONFIGURE NOT FOUND COLUMNS Reason is : " + SR);
	}

	public void ClickMatched()
	{
		Matched.click();
	}

	public void ClickOKButton()
	{
		OKBTN.click();
		System.out.println("OK button is Clicked");
		chiledTest.log(Status.INFO, "OK button is Clicked");
	}

	public void VerifyAnnexureWasSuccessfullyDeletedMSGIsDisplayed()
	{
		WebDriverWait wait = new WebDriverWait(driver, 20);
		WebElement DeletedMSG = driver.findElement(By.xpath("//span[contains(text(),'Annexure was successfully deleted.')]"));
		Assert.assertTrue(wait.until(ExpectedConditions.visibilityOf(DeletedMSG)).isDisplayed(), "Annexure was successfully deleted Message is Not displayed");
		System.out.println("Annexure was successfully deleted Message is displayed");
		chiledTest.log(Status.INFO, "Annexure was successfully deleted Message is displayed");
	}

	public void ClickEditButton() throws InterruptedException
	{
		Thread.sleep(2000);
		WebDriverWait wait = new WebDriverWait(driver, 20);
		wait.until(ExpectedConditions.visibilityOf(EditBTN));
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", EditBTN);
		System.out.println("Edit Button is Clicked");
		chiledTest.log(Status.INFO, "Edit Button is Clicked");
	}

	public void VerifyAnnexureCreatedSuccessfullyMSGIsDisplayed(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 20);

		WebElement success = driver.findElement(By.xpath("//div[@class='alert alert-success']/span"));
		if(wait.until(ExpectedConditions.visibilityOf(success)).isDisplayed())
		{
			String Expected_Text = success.getText();
			String Actual_Text = "Annexure created successfully.";
			Assert.assertEquals(Expected_Text, Actual_Text);
			System.out.println("Pass : Annexure created successfully Success Message is Displayed");
			chiledTest.log(Status.INFO, "Annexure created successfully Success Message is Displayed");

			//Clicking on the Close button
			driver.findElement(By.xpath("//div[@class='alert alert-success']/button")).click();
		}

	}


	public void VerifyAnnexureWasSuccessfullyUpdatedMSGIsDisplayed(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 20);

		WebElement success = driver.findElement(By.xpath("//div[@class='alert alert-success']/span"));
		if(wait.until(ExpectedConditions.visibilityOf(success)).isDisplayed())
		{
			String Expected_Text = success.getText();
			String Actual_Text = "Annexure was successfully updated.";
			Assert.assertEquals(Expected_Text, Actual_Text);
			System.out.println("Pass : Annexure was successfully updated. Success Message is Displayed");
			chiledTest.log(Status.INFO, "Annexure was successfully updated Success Message is Displayed");

			//Clicking on the Close button
			driver.findElement(By.xpath("//div[@class='alert alert-success']/button")).click();
		}
	}

	public void VerifyNameHasAlreadyBeenTakenMSGIsDisplayed(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 20);

		WebElement success = driver.findElement(By.xpath("//div[@class='alert alert-danger']/span"));
		if(wait.until(ExpectedConditions.visibilityOf(success)).isDisplayed())
		{
			String Expected_Text = success.getText();
			String Actual_Text = "Annexure Name has already been taken";
			Assert.assertEquals(Expected_Text, Actual_Text);
			System.out.println("Pass : Annexure Name has already been taken Error Message is Displayed");

			//Clicking on the Close button
			driver.findElement(By.xpath("//div[@class='alert alert-danger']/button")).click();
		}
	}

	public void VerifyNoMatchingRecordsFoundMSGIsDisplayed(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 20);

		WebElement NoMatchFound = driver.findElement(By.xpath("//td[@class='dataTables_empty']"));
		if(wait.until(ExpectedConditions.visibilityOf(NoMatchFound)).isDisplayed())
		{
			String Expected_Text = NoMatchFound.getText();
			String Actual_Text = "No matching records found";
			Assert.assertEquals(Expected_Text, Actual_Text);
			System.out.println("Pass : No matching records found Message is Displayed");
		}
	}

	public void VerifyMandatoryFieldsAreDisplayed(WebDriver driver)
	{
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

		//Checking Annexutre Name
		WebElement AN = driver.findElement(By.xpath("//input[@id='annexure_name' and @required='required' and @maxlength='200']"));

		//Checking Attribute Name
		WebElement AT = driver.findElement(By.xpath("//input[@class='form-control attribute_name_fields'][@required='required' and @maxlength='200']"));

		//Checking Primary Identifyer
		WebElement PI = driver.findElement(By.xpath("//select[@id='primary_identifier'][@required='required']"));

		//Checking Reason
		WebElement Reason = driver.findElement(By.xpath("//input[@placeholder='Enter reason here'][@required='required']"));
		if(AN.isDisplayed() && AT.isDisplayed() && PI.isDisplayed() && Reason.isDisplayed())
		{
			System.out.println("Pass : Annexure Name Is Required Field");
			System.out.println("Pass : Attribute Name Is Required Field");
			System.out.println("Pass : Primary Identifier Is Required Field");
			System.out.println("Pass : Configure Reason Is Required Field");
		}
	}

	public void VerifyingPrimaryIdentifierOptionsAreAutoSelectd(WebDriver driver)
	{
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);

		//driver.findElement(By.xpath("//div[@id='s2id_primary_identifier']")).click();
		driver.findElement(By.xpath("//select[@id='primary_identifier']/option")).isDisplayed();

	}

	public void VerifyErrorMessageAreDisplayed(WebDriver driver)
	{
		WebDriverWait wait = new WebDriverWait(driver, 10);
		//Checking First Name Error Message
		if(wait.until(ExpectedConditions.visibilityOf(AnnexureNameError)).isDisplayed()){
			System.out.println("Pass : Annexure Name contain special characters Error Message is Displayed");
			chiledTest.log(Status.INFO, "Annexure Name contain special characters Error Message is Displayed");}
		else {
			System.out.println("Pass : Annexure Name contain special characters Error Message is Not Displayed");
			chiledTest.log(Status.INFO, "Annexure Name contain special characters Error Message is Not Displayed");} 

		//Checking Last Name Error Message
		if(wait.until(ExpectedConditions.visibilityOf(AttributeNameError)).isDisplayed()){
			System.out.println("Pass : Attribute Name contain special characters Error Message is Displayed");
			chiledTest.log(Status.INFO, "Attribute Name contain special charactersr Message is Displayed");}
		else {
			System.out.println("Pass : Attribute Name contain special characters Error Message is Not Displayed");
			chiledTest.log(Status.INFO, "Attribute Name contain special characters Error Message is Not Displayed");} 

	}

	public void VerifyAreYouSurePopUpIsDisplayed()
	{
		WebElement AreYouSure = driver.findElement(By.xpath("//p[contains(text(),'Are you sure?')]"));
		Assert.assertTrue(AreYouSure.isDisplayed(), "Are you sure pop is Not displayed");
		System.out.println("Are you sure pop up is displayed");
		chiledTest.log(Status.INFO, "Are you sure pop up is displayed");

	}

	public void VerifyAnnexuresDisplayed() throws InterruptedException
	{
		Thread.sleep(3000);
		try{
			driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
			WebElement Annexuress = driver.findElement(By.xpath("//table[@id='tableWithSearch']/tbody/tr/td[@class='sorting_1']"));
			Assert.assertTrue(Annexuress.isDisplayed());
			System.out.println("Searched Annexure is Displayed");
			chiledTest.log(Status.INFO, "Searched Annexure is Displayed");
		}catch (Exception e) {
			WebElement NoDataFound = driver.findElement(By.xpath("//td[contains(text(),'No data available in table')]"));
			Assert.assertTrue(NoDataFound.isDisplayed());
			System.out.println("No data available in table Error Message is Displayed");
			chiledTest.log(Status.INFO, "No data available in table Error Message is Displayed");
		}
	}

}

