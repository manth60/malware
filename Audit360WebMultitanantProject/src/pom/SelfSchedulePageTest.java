package pom;

import org.junit.Assert;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import generic.BaseTest;

public class SelfSchedulePageTest extends BaseTest {
	
	//Clicking on the Create Scedule Button
		@FindBy(xpath="//a[@class='btn btn-primary']/b[text()='Create Schedule']")
		private WebElement CreateSceduleBTN;

		//Passing the Values to Audit Type
		@FindBy(xpath="//div[@id='s2id_my_audits_audit_types']//input[@type='text']")
		private WebElement AuditType;

		//Passing the Values to Auditee 
		@FindBy(xpath="//div[@id='s2id_my_audits_auditee_ids']//input[@type='text']")
		private WebElement Auditee;

		//Passing the Values to Execution Status
		@FindBy(xpath="//div[@id='s2id_my_audits_execution_status']//input[@type='text']")
		private WebElement ExecutionStatus;

		//Passing the Values to From Date
		@FindBy(xpath="//input[@id='my_audits_start_date']")
		private WebElement FromDate;

		//Passing the Values to From Date
		@FindBy(xpath="//input[@id='my_audits_end_date']")
		private WebElement EndDate;

		//Clicking on the Matched
		@FindBy(xpath="//span[@class='select2-match']")
		private WebElement Matched;
		
		//Select_Audit_Type drop down 
		@FindBy(xpath="select2-choice select2-default")
		private WebElement Select_Audit_Type_DROP_DOWN;
		
		//Select Audit type
		@FindBy(xpath="//div[@id='s2id_audit_audit_type_id']")
		private WebElement Select_Audit_Type;

		//Select Audit type text field
		@FindBy(xpath="//input[@id='s2id_autogen18_search']")
		private WebElement Audit_Type_Input_Field;
		
		//Select auditee type//div[@id='s2id_audit_auditee_type_id']
		@FindBy(xpath="//div[@id='s2id_audit_auditee_type_id']")
		private WebElement Select_Auditee_Type;
		
		//Select Vendor
		@FindBy(xpath="//div[@class='select2-result-label']")
		private WebElement Vendor;
		
		//Select Auditee
		@FindBy(xpath="//div[@id='s2id_search_auditor_auditee']")
		private WebElement Select_Auditee;
		
		//Select Auditee text field;
		@FindBy(xpath="//input[@id='s2id_autogen11_search']")
		private WebElement Select_Auditee_Input_Field;
		
		//Select Schedule start date
		@FindBy(xpath="//input[@name='audit[audit_schedules_attributes][0][start_date]']")
		private WebElement Schedule_Start_date;
		
		//Select Schedule End Date
		@FindBy(xpath="//input[@name='audit[audit_schedules_attributes][0][end_date]']")
		private WebElement Schedule_End_Date;
		
		//Select Review Period From
		@FindBy(xpath="//input[@id='audit_audit_schedules_attributes_0_audit_period_from']")
		private WebElement Review_Period_From;
		
		//Select Review PeriodTo
		@FindBy(xpath="//input[@id='audit_audit_schedules_attributes_0_audit_period_to']")
		private WebElement Review_Period_To;
		
		//Save button Audit Schedule
		@FindBy(xpath="//input[@id='audit_schedule_create']")
		private WebElement Save_BTN_Audit_Schedule;
		
		//Error message 
		@FindBy(xpath="//div[@class='alert alert-danger']/span")
		private WebElement Error_MSG;
		
		//Enter reason for selef schedule text field
		@FindBy(xpath="//input[@Placeholder='Enter Reason for self schedule']")
		private WebElement Reason_For_Self_Schedule_Text_FIeld;
		
		//Success messagwe for reason mandatory field
		@FindBy(xpath="//span[contains(text(),'Self schedule request placed successfully please w')]")
		private WebElement Success_Message_For_Reason_Mandatory_Field;
		
		//Success messagwe for reason mandatory field
		@FindBy(xpath="//span[contains(text(),'Schedule created successfully')]")
		private WebElement Success_Message_Schedule_Created;
		

		public SelfSchedulePageTest(WebDriver driver)
		{
			PageFactory.initElements(driver, this);
		}
		
		public void ClickOnSelfSceduleBTN() throws InterruptedException {
			Thread.sleep(5000);
			WebDriverWait wait = new WebDriverWait(driver, 30);
			Actions act=new Actions(driver);
			wait.until(ExpectedConditions.visibilityOf(CreateSceduleBTN));
		//	Assert.assertTrue(CreateSceduleBTN.isDisplayed());
		//	act.moveToElement(CreateSceduleBTN).click().build().perform();
			CreateSceduleBTN.click();
		
		}
		
		public void SelectAuditType() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(Select_Audit_Type));
			Select_Audit_Type.click();
			
		}
		
		public void SendInputInAuditTypeTextField(String AT) {
			WebDriverWait wait = new WebDriverWait(driver, 30);
		//	wait.until(ExpectedConditions.visibilityOf(Audit_Type_Input_Field));
			Audit_Type_Input_Field.sendKeys(AT);
			Audit_Type_Input_Field.sendKeys(Keys.ENTER);
		}
		
		public void SelectAuditeeType() throws InterruptedException {
			Thread.sleep(3000);
			WebDriverWait wait = new WebDriverWait(driver, 30);
		//	wait.until(ExpectedConditions.elementToBeClickable(Select_Auditee_Type));
			Select_Auditee_Type.click();
			wait.until(ExpectedConditions.visibilityOf(Vendor));
			Vendor.click();
		}
		
		public void SelectAuditee() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOf(Select_Auditee));
			Select_Auditee.click();
		}
		
		public void SendInputInAuditeeTextField(String A) throws InterruptedException {
			
			Select_Auditee_Input_Field.sendKeys(A);
			Thread.sleep(2000);
			Select_Auditee_Input_Field.sendKeys(Keys.ENTER);
		}
		
		public void SelectStartDate() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(Schedule_Start_date));
			Schedule_Start_date.click();
			Schedule_Start_date.sendKeys(Keys.ENTER);
		}
		
		public void SelectEndDate() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(Schedule_End_Date));
			Schedule_End_Date.click();
			Schedule_End_Date.sendKeys(Keys.ENTER);
		}
		
		public void SelectReviewPeriodFrom() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(Review_Period_From));
			Review_Period_From.click();
			Review_Period_From.sendKeys(Keys.ENTER);
		}
		
		public void SelectReviewPeriodTo() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(Review_Period_To));
			Review_Period_To.click();
			Review_Period_To.sendKeys(Keys.ENTER);
		}
		
		public void SelectSaveButtonAuditSchedule() {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.elementToBeClickable(Save_BTN_Audit_Schedule));
			Save_BTN_Audit_Schedule.click();
		}
		
		public void SuccessMessageForSelfSchedule() {
			
			String act_Txt=Success_Message_Schedule_Created.getText();
			String exp_txt="Schedule created successfully";
			Assert.assertEquals(act_Txt, exp_txt);
		}
		
		public void VerifyErrorMeassge() {
		   String act_Txt=	Error_MSG.getText();
		   String exp_Txt="Reason can't be blank";
		   Assert.assertEquals(act_Txt,exp_Txt);
		}
		
		public void SendInputInReasonForSelfScheduleTextField(String REASON) {
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.visibilityOf(Reason_For_Self_Schedule_Text_FIeld));
			Reason_For_Self_Schedule_Text_FIeld.sendKeys(REASON);
		}
		
		public void SelfScheduleCreatedSuccessMessageForReasonMandatoryField() {
			String act_Txt=Success_Message_For_Reason_Mandatory_Field.getText();
			String exp_Txt="Self schedule request placed successfully please wait for admin approval.";
			Assert.assertEquals(act_Txt,exp_Txt);
			
		}
}
