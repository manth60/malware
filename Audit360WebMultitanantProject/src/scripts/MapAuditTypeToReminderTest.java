package scripts;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;

import generic.BaseTest;
import generic.Lib;
import pom.ConfigureAuditPageTest;
import pom.LoginPageTest;

public class MapAuditTypeToReminderTest extends BaseTest {

	
	//Testing the Functionality of the Configure Audit page
	@Test(priority=1)
	public void Configure_Audit_Page_Test() throws InterruptedException
	{
		LoginPageTest l=new LoginPageTest(driver);

		ConfigureAuditPageTest CA = new ConfigureAuditPageTest(driver);

		parentTest = extent.createTest("Reminder Module[A3-400]", "Testing Map Audit Type to Reminder.");
		chiledTest = parentTest.createNode("Configure Audit Page Test");

		System.out.println("Configure Audit Page Test");

		chiledTest.log(Status.INFO, "Entered Valid UserName and Valid Password");

		//Taking the User name from 'TestValidLoginPage' sheet in excel
		String un=Lib.getCellValue(XLPATH, "Login Credentials",3,0);
		l.setusername(un);

		String pw=Lib.getCellValue(XLPATH,"Login Credentials",3,1);
		l.setpassword(pw);

		//clicking on the Login Button
		l.ClickSigninBTN();
		chiledTest.log(Status.INFO, "Sig-in Button is Clicked");

		//Verify Signed in Successfully Message is Displayed
		l.verifySignedInSuccessMsgIsDisplayed(driver);
		chiledTest.log(Status.INFO, "Signed in successfully. Success Message is Displayed");

		//clicking on Scroll Bar Under side menu
		CA.ClickScrollBar(driver);

		//Clicking on the User Manage from side menu
		CA.ClickConfigureAudit(driver);
		chiledTest.log(Status.INFO, "Configure Audit is Clicked");

		//Clicking on the configure Audit Sub menu
		CA.ClickConfigureAuditSubMenu();

		//Verifying Audit type Page is Displayed
		CA.VerifyAuditTypePageIsDisplayed(driver);
		chiledTest.log(Status.INFO, "Audit type Page is Displayed");

		System.out.println("******************************************************");


	}
	
	@Test(priority=2)
	public void CreateParentAuditType() throws InterruptedException {
		ConfigureAuditPageTest CA = new ConfigureAuditPageTest(driver);
		chiledTest = parentTest.createNode("Map Audit with Reminder Test");
		//Clicking on the Create Audit Type Button
		CA.ClickCreateAuditTypeBTN(driver);
		chiledTest.log(Status.INFO, "Create Audit Type Button is Clicked");

		//******* Begin Tab *****************************
		
		CA.ClickBeginTabNextButton();

		CA.VerifyBeginTabMandatoryFields(driver);

		//Passing the Values to Audit Type Name
		String ATN1 = Lib.getCellValue(XLPATH, "Configure Audit Type", 14, 0);
		CA.SetAuditTypeName(ATN1, driver);
		chiledTest.log(Status.INFO, "Audit Name is Entered");

		//Passing the values to Select Audit Type
		String SAT1 = Lib.getCellValue(XLPATH, "Configure Audit Type", 23, 0);
		CA.SetSelectAuditType(SAT1, driver);
		chiledTest.log(Status.INFO, "Audit type is Selected");

		//clicking on the Matching
		CA.ClickMatch();

		//Clicking on the Begin Tab
		CA.ClickBeginTabNextButton();
		chiledTest.log(Status.INFO, "Next Button is Clicked");

		//******* DEFINE TAB *****************************

		//Clicking on the Parent Type Audit Radio Button
		CA.ClickParentTypeAuditRadioBTN(driver);
		chiledTest.log(Status.INFO, "Parent audit type Radio Button is Clicked");

		//Clicking on the select Group type
		CA.ClickSelectGrouptype(driver);

		//Passing the Values to Select Group Type
		String SGT1 = Lib.getCellValue(XLPATH, "Configure Audit Type", 27, 0);
		CA.SetSelectGrouptype(SGT1);
		chiledTest.log(Status.INFO, "General Group Type is Selected");

		//clicking on the Matching
		CA.ClickMatch();

		//Passing the Values to Select CheckPoint Group
		String SCG = Lib.getCellValue(XLPATH, "Group", 8, 0);
		CA.SetSelectCheckPointGroup(SCG, driver);
		chiledTest.log(Status.INFO, "Select CheckPoint Group is Entered");

		//clicking on the Matching
		CA.ClickMatch();

		//Clicking on the Next Button
		CA.ClickDefineTabNextButton();
		chiledTest.log(Status.INFO, "Next Button is Clicked");

		// ********* EVALUATE  TAB ***************************

		CA.ClickEvaluteTabNextButton();

		CA.VerifyEvaluateTabMandatoryFileds(driver);

		//Passing the Values to Low Risk Scoring
		String LR = Lib.getCellValue(XLPATH, "Configure Audit Type", 37, 0);
		CA.SetLowRiskScoring(LR);
		chiledTest.log(Status.INFO, "Low Risk Scoring is Entered");

		//Passing the Values to Medium Risk Scoring
		String MR = Lib.getCellValue(XLPATH, "Configure Audit Type", 41, 0);
		CA.SetMeadiumRiskScroring(MR);
		chiledTest.log(Status.INFO, "Medium Risk Scoring is Entered");

		//Passing the Values to High Risk Scoring
		String HR = Lib.getCellValue(XLPATH, "Configure Audit Type", 45, 0);
		CA.SetHighRiskScoring(HR);
		chiledTest.log(Status.INFO, "High Risk Scoring is Entered");

		//Passing the Values to Zero Tolerance Risk Scoring
		String ZR = Lib.getCellValue(XLPATH, "Configure Audit Type", 49, 0);
		CA.SetZeroTaleranceRiskScoring(ZR);
		chiledTest.log(Status.INFO, "Zero Tolerance Risk Scoring is Entered");

		//Clicking on the Next Button
		CA.ClickEvaluteTabNextButton();
		chiledTest.log(Status.INFO, "Next Button is Clicked");

		//Verifying Would you like to configure Roles for this Audit Type? Alert is Displayed
		Alert Alert = driver.switchTo().alert();
		Alert.dismiss();

		//******** CONFIGURE  TAB **************

		CA.VerifyConfigureTabMandatoryFields(driver);

		//Clicking on the Select verifier
		CA.clickSelectVerifier();

		//Passing the Values to Select Verifier
		String SV = Lib.getCellValue(XLPATH, "Configure Audit Type", 58, 0);
		CA.SetSelectVerifier(SV);
		chiledTest.log(Status.INFO, "Verifier is Selected");

		//Clicking on the Match
		CA.ClickMatch();
		
		//Changes by Manthan
		CA.ClickSelectTATType();
		CA.SetSelectTATType("proposed by Auditee");
		
		CA.ClickReminders();
		CA.SetRemainders("Reminder Test 1058");
		chiledTest.log(Status.INFO, "Audit type gets created with selected ‘Reminder(s)’ and the reminders will be triggered for that audit type as configured in that 'Reminder(s)’ module.");

		
		
		//Upto here

		//Clicking on the Next Button
		CA.ClickConfigureTabNextButton();
		chiledTest.log(Status.INFO, "Next Button is Clicked");


		//*************** Finalize Tab *************************

		CA.VerifyFinalizeTabMandatoryFields(driver);

		//***********Send input in text filed 1 of outcome
		String OUTCOME1=Lib.getCellValue(XLPATH, "Configure Audit Type",97, 0);
		CA.SendInputInTextFieldOfOutcome1(OUTCOME1);
		
		//Clicking on the Submit Button
		CA.ClickSubmitBTN(driver);
		chiledTest.log(Status.INFO, "Submit Button is Clicked");

		System.out.println("********************************************");

		
		
		
	}
	
	@Test(priority=3)//Creating_General_Sub_Audit_Type_Test
     public void MapAuditWithReminder() throws InterruptedException
	{

		ConfigureAuditPageTest CA = new ConfigureAuditPageTest(driver);

		chiledTest = parentTest.createNode("Search mapped audit to Reminder.");

		System.out.println("Creating General Sub Audit Type Test");
/*
		//Clicking on the Create Audit Type Button
		CA.ClickCreateAuditTypeBTN(driver);
		chiledTest.log(Status.INFO, "Creating General Audit Type Button is Clicked");

		//Passing the Values to Audit Type Name
		String ATN2 = Lib.getCellValue(XLPATH, "Configure Audit Type", 4, 0);
		CA.SetAuditTypeName(ATN2, driver);
		chiledTest.log(Status.INFO, "Audit Name is Entered");

		//Passing the values to Select Audit Type
		String SAT2 = Lib.getCellValue(XLPATH, "Configure Audit Type", 23, 0);
		CA.SetSelectAuditType(SAT2, driver);
		chiledTest.log(Status.INFO, "Audit type is Selected");

		//clicking on the Matching
		CA.ClickMatch();

		//Clicking on the Next Button
		CA.ClickBeginTabNextButton();
		chiledTest.log(Status.INFO, "Next Button is Clicked");

		//*************** Define Tab ***********************

		//Clicking on the select Group type
		CA.ClickSelectGrouptype(driver);

		//Passing the Values to Select Group Type
		String SGT1 = Lib.getCellValue(XLPATH, "Configure Audit Type", 27, 0);
		CA.SetSelectGrouptype(SGT1);
		chiledTest.log(Status.INFO, "Select Group Type is Selected");

		//clicking on the Matching
		CA.ClickMatch();

		//Passing the Values to Select CheckPoint Group
		String SCG1 = Lib.getCellValue(XLPATH, "Group", 8, 0);
		CA.SetSelectCheckPointGroup(SCG1, driver);
		chiledTest.log(Status.INFO, "Select CheckPoint Group is Entered");

		//clicking on the Matching
		CA.ClickMatch();

		//Clicking on the Submit Button
		CA.ClickSubmitBTN(driver);
		chiledTest.log(Status.INFO, "Submit Button is Clicked");

		//Verifying Audit type created successfully Success Message is Displayed
		CA.VerifyAuditTypeCreatedSuccessfullyMsgIsDisplayed(driver);
		chiledTest.log(Status.INFO, "Audit type created successfully Success Message is Displayed");

*/
		//Passing the Values to Search Text box
		String SB = Lib.getCellValue(XLPATH, "Configure Audit Type",14, 0);
		CA.SetSearchBTN(SB);
		chiledTest.log(Status.INFO, "Created  Audit Type is Searched in textbox.");

		Thread.sleep(4000);

		//Checking SN0
		boolean SN0 = driver.findElements(By.xpath("//table[@id='tableAuditTypes']/tbody/tr[1]/td[1]")).size()>0;
		System.out.println("SNO is Displayed : " + SN0);

		String GroupName = driver.findElement(By.xpath("//table[@id='tableAuditTypes']/tbody/tr[1]/td[2]")).getText();
		Assert.assertEquals(SB, GroupName);

		WebElement ParentAudityType = driver.findElement(By.xpath("//table[@id='tableAuditTypes']/tbody/tr[1]/td[3]"));
		String No = ParentAudityType.getText();
		System.out.println("Parent Audity Type is : " + No);
		Assert.assertEquals("Yes", No);

		//Checking Time stamp
		boolean TimeStamp = driver.findElements(By.xpath("//table[@id='tableAuditTypes']/tbody/tr[1]/td[4]")).size()>0;
		System.out.println("Time Stamp is Displayed : " + TimeStamp);

		System.out.println("****************************************************************");

		//Click on version and it should navigate to particular audit
		CA.ClickVersionOfAuditType();
		chiledTest.log(Status.INFO, "System should navigate the audit type into the edit type audit.");
	
		//Edit audit type page will work as per our current workflow.
	    CA.ClickOnEditAction();
	    chiledTest.log(Status.INFO, "Edit audit type page will work as per our current workflow.");
	
	    CA.VerifyReminderTest1058Text();
	    chiledTest.log(Status.INFO, "Validate text Reminder Test 1058 in edit audit type as per current workflow");
	}
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
}
