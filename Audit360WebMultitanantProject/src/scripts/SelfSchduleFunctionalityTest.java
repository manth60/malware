package scripts;

import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;

import generic.BaseTest;
import generic.Lib;
import pom.AuditSchedulePageTest;
import pom.LoginPageTest;
import pom.SelfSchedulePageTest;

public class SelfSchduleFunctionalityTest extends BaseTest {

	@Test(priority=1)
	public void Audit_Schedule_Page_Test() throws InterruptedException
	{
		LoginPageTest l=new LoginPageTest(driver);

		AuditSchedulePageTest SP = new AuditSchedulePageTest(driver);

		parentTest = extent.createTest("A3-412 Audit Self Schedule Functionality Test", "Testing the Functionality of the Self Schedule.");

		chiledTest = parentTest.createNode("Self Schedule Page Test");

		System.out.println("Self Schedule Page Test");

		chiledTest.log(Status.INFO, "Entered Valid UserName and Valid Password");
		String un=Lib.getCellValue(XLPATH, "Login Credentials",45,0);
		l.setusername(un);

		String pw=Lib.getCellValue(XLPATH,"Login Credentials",45,1);
		l.setpassword(pw);

		//clicking on the Login Button
		l.ClickSigninBTN();
		chiledTest.log(Status.INFO, "Sigin Button is Clicked");

		/*
		//Verify Signed in Successfully Message is Displayed
		l.verifySignedInSuccessMsgIsDisplayed(driver);
		chiledTest.log(Status.INFO, "Signed in successfully. Success Message is Displayed");

		SP.ClickScrollBar(driver);

		//Clicking on the Schedule 
		SP.ClickSchedule(driver);

		//Clicking on the Audit Schedule
		SP.ClickAuditSchedule(driver);
		chiledTest.log(Status.INFO, "Audit Schedule is Clicked");

		//Checking the Audit Schedule Page
		SP.VerifyAuditSchedulPageIsDisplayed(driver);
		chiledTest.log(Status.INFO, "Audit Schedule Page is Displayed");

		System.out.println("*****************************************************************");
*/
	}	
	
	@Test(priority=2)
	public void SelfScheduleTest() throws InterruptedException {
		chiledTest = parentTest.createNode("Audit Review Period and reason for self schedule is not mandatory workflow.");
		SelfSchedulePageTest SC=new SelfSchedulePageTest(driver);
		SC.ClickOnSelfSceduleBTN();
		chiledTest.log(Status.INFO, "Clicked on Self Schedule button");
		
		SC.SelectAuditType();
		chiledTest.log(Status.INFO, "Clicked on Select Audit type drop down");
		String AT=Lib.getCellValue(XLPATH, "Schedule",55,0);
		SC.SendInputInAuditTypeTextField(AT);
		chiledTest.log(Status.INFO, "Sent input in Audit type text field");
		
		SC.SelectAuditeeType();
		chiledTest.log(Status.INFO, "Clicked on Select Auditee type drop down");
		
		SC.SelectAuditee();
		chiledTest.log(Status.INFO, "Clicked on Select Auditee drop down");
		String A=Lib.getCellValue(XLPATH, "Schedule",19,0);
		SC.SendInputInAuditeeTextField(A);
		chiledTest.log(Status.INFO, "Sent input in Auditee text field");
		
		SC.SelectStartDate();
		chiledTest.log(Status.INFO, "Select Schedule start date.");
		
		SC.SelectEndDate();
		chiledTest.log(Status.INFO, "Select Schedule end date.");
		
		SC.SelectReviewPeriodFrom();
		chiledTest.log(Status.INFO, "Select review period from date.");
		
		SC.SelectReviewPeriodTo();
		chiledTest.log(Status.INFO, "Select review period to date.");
		
		SC.SelectSaveButtonAuditSchedule();
		
	
		SC.SuccessMessageForSelfSchedule();
		chiledTest.log(Status.INFO, "'Schedule created successfully' message to be displayed in the auditor’s login page in Web.");
	}
	
	@Test(priority=3)
	public void SelfScheduleReasonMandatoryErrorMeassgeTest() throws InterruptedException {
		chiledTest = parentTest.createNode("“Reason for Self-Schedule” is not updated and clicks on “Save” tab.");
		
		SelfSchedulePageTest SC=new SelfSchedulePageTest(driver);
		SC.ClickOnSelfSceduleBTN();
		
		SC.SelectAuditType();
		
		String AT=Lib.getCellValue(XLPATH, "Schedule",56,0);
		SC.SendInputInAuditTypeTextField(AT);
		
		SC.SelectAuditeeType();
		
		SC.SelectAuditee();
		
		String A=Lib.getCellValue(XLPATH, "Schedule",19,0);
		SC.SendInputInAuditeeTextField(A);
		
		SC.SelectStartDate();
		
		SC.SelectEndDate();
		
		SC.SelectReviewPeriodFrom();
		
		SC.SelectReviewPeriodTo();
		
		SC.SelectSaveButtonAuditSchedule();
		
		SC.VerifyErrorMeassge();
		chiledTest.log(Status.INFO, "“Reason can’t be blank” message should appear under the auditors landing page in web.");
	}
	
	@Test(priority=4)
	public void SelfScheduleReasonMandatoryTest() throws InterruptedException {
		chiledTest = parentTest.createNode("Do you need approval for Self-schedule” is enabled workflow.");
		SelfSchedulePageTest SC=new SelfSchedulePageTest(driver);
		SC.ClickOnSelfSceduleBTN();
		
		SC.SelectAuditType();
		
		String AT=Lib.getCellValue(XLPATH, "Schedule",56,0);
		SC.SendInputInAuditTypeTextField(AT);
		
		SC.SelectAuditeeType();
		
		SC.SelectAuditee();
		
		String A=Lib.getCellValue(XLPATH, "Schedule",19,0);
		SC.SendInputInAuditeeTextField(A);
		
		SC.SelectStartDate();
		
		SC.SelectEndDate();
		
		SC.SelectReviewPeriodFrom();
		
		SC.SelectReviewPeriodTo();
		
	
		SC.SendInputInReasonForSelfScheduleTextField(AT);
		
		SC.SelectSaveButtonAuditSchedule();
		
		SC.SelfScheduleCreatedSuccessMessageForReasonMandatoryField();
		chiledTest.log(Status.INFO, "“Self-schedule request placed successfully please wait for admin approval” message should pop up in the auditors landing page.");
	}
}
