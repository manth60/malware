package scripts;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;

import generic.BaseTest;
import generic.Lib;
import pom.AuditExecutionPageTest;
import pom.CheckPointPageTest;
import pom.LoginPageTest;
import pom.SelfSchedulePageTest;

public class AuditorDashboardHeaderScreenFunctionalityTest extends BaseTest {
//Test case 570 547 408 409
	@Test(priority=1)
public void AuditorDashboardHeaderScreenTest() {
	parentTest = extent.createTest("Testing the Functionality To be audited count and header legends as per single auditor.");
	chiledTest = parentTest.createNode("Login as auditor and create self schedule Auditor Test");
	LoginPageTest l=new LoginPageTest(driver);
	String un=Lib.getCellValue(XLPATH, "Login Credentials",45,0);
	l.setusername(un);

	String pw=Lib.getCellValue(XLPATH,"Login Credentials",45,1);
	l.setpassword(pw);

	//clicking on the Login Button
	l.ClickSigninBTN();
	chiledTest.log(Status.INFO, "Sigin Button is Clicked");

	//Verify Signed in Successfully Message is Displayed
	l.verifySignedInSuccessMsgIsDisplayed(driver);
	chiledTest.log(Status.INFO, "Signed in successfully. Success Message is Displayed");

}
	
	
	@Test(priority=2)
	public void SelfScheduleTest() throws InterruptedException {
		chiledTest = parentTest.createNode("Create self schedule for to be audited count and header legends.");
		SelfSchedulePageTest SC=new SelfSchedulePageTest(driver);
		SC.ClickOnSelfSceduleBTN();
		chiledTest.log(Status.INFO, "Clicked on Self Schedule button");
		
		SC.SelectAuditType();
		chiledTest.log(Status.INFO, "Clicked on Select Audit type drop down");
		String AT=Lib.getCellValue(XLPATH, "Schedule",57,0);
		SC.SendInputInAuditTypeTextField(AT);
		chiledTest.log(Status.INFO, "Sent input in Audit type text field");
		
		SC.SelectAuditeeType();
		chiledTest.log(Status.INFO, "Clicked on Select Auditee type drop down");
		
		SC.SelectAuditee();
		chiledTest.log(Status.INFO, "Clicked on Select Auditee drop down");
		String A=Lib.getCellValue(XLPATH, "Schedule",19,0);
		SC.SendInputInAuditeeTextField(A);
		chiledTest.log(Status.INFO, "Sent input in Auditee text field");
		
		SC.SelectStartDate();
		chiledTest.log(Status.INFO, "Select Schedule start date.");
		
		SC.SelectEndDate();
		chiledTest.log(Status.INFO, "Select Schedule end date.");
		
		SC.SelectReviewPeriodFrom();
		chiledTest.log(Status.INFO, "Select review period from date.");
		
		SC.SelectReviewPeriodTo();
		chiledTest.log(Status.INFO, "Select review period to date.");
		
		SC.SelectSaveButtonAuditSchedule();
		
	
		SC.SuccessMessageForSelfSchedule();
		chiledTest.log(Status.INFO, "'Schedule created successfully' message to be displayed in the auditorâ€™s login page in Web.");
	}	
	
	@Test(priority=3)
	public void ExecuteCheckpoint() throws InterruptedException {
		
		AuditExecutionPageTest AE = new AuditExecutionPageTest(driver);
		chiledTest = parentTest.createNode("Executing The Schedule By 1st Auditor Test");
		//Clicking on the Accept Button
		
	//	String AT2 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 9, 0);
		AE.SetAuditType("Auditor Dashboard Header Screen", driver);
		chiledTest.log(Status.INFO, "Audit Type is Searched");

		AE.ClickMatched();

		Thread.sleep(3000);
		
		
		
				AE.AcceptAuditByClickingOnNotStarted();
				chiledTest.log(Status.INFO, "Accept Button is Clicked");

				
				//Clicking on the Normal Button
				AE.Clicknormal(driver);
				chiledTest.log(Status.INFO, "Normal Button is clicked");
				
				//Verifying Audit accepted successfully Success Message is Displayed
		//		AE.VerifyAuditAcceptedSuccesfullyMSGIsDisplayed(driver);
		//		chiledTest.log(Status.INFO, "Audit accepted successfully Success Message is Displayed");
                Thread.sleep(2000);
				//Checkpoint 1 execution
				AE.getCountOfToBeAuditedForFirstCheckpoint();
				chiledTest.log(Status.INFO, "To be audited count shown on header part of dashboard.");
				//Passing the Values to Enter Remarks
				String ER11 = Lib.getCellValue(XLPATH, "Audit Execution", 11, 0);
				AE.SetEnterRemarks(ER11);
				chiledTest.log(Status.INFO, "Remarks is Entered");
				//Passing the Values to Enter confidential Remarks
				String ECR11 = Lib.getCellValue(XLPATH, "Audit Execution", 26, 0);
				AE.SetEnterConfidentalRemarks(ECR11);
				chiledTest.log(Status.INFO, "Confidential Remarks is Entered");
				//Clicking on the Yes Button
				AE.ClickYesButton();		
				AE.ClickNextButton(driver);
				chiledTest.log(Status.INFO, "Next Button is Clicked");
				Thread.sleep(2000);
				
			
				chiledTest.log(Status.INFO, "To be audited count should decrease after clciking on next button on header part of dashboard.");
				//Checkpoint 2 executuion
				AE.getCountOfToBeAuditedForSecondCheckpoint();
				AE.SetEnterRemarks(ER11);
				chiledTest.log(Status.INFO, "Remarks is Entered");
				AE.SetEnterConfidentalRemarks(ECR11);
				chiledTest.log(Status.INFO, "Confidential Remarks is Entered");
				//Passing the Values to 1st Text and Number
				String TN = Lib.getCellValue(XLPATH, "Audit Execution", 42, 0);
				AE.SetTextAndNumber(TN);
				AE.ClickNextButton(driver);
				chiledTest.log(Status.INFO, "Next Button is Clicked");
				Thread.sleep(2000);
				
				//Checkpoint execution 3
				AE.getCountOfToBeAuditedForThirdCheckpoint();
				//Passing the Values to Enter confidential Remarks and remarks
				AE.SetEnterRemarks(ER11);
				chiledTest.log(Status.INFO, "Remarks is Entered");
				String ECR23 = Lib.getCellValue(XLPATH, "Audit Execution", 28, 0);
				AE.SetEnterConfidentalRemarks(ECR23);
				chiledTest.log(Status.INFO, "Confidential Remarks is Entered");

				//Clicking on the No Button
				AE.ClickNoButton();
				
				AE.SelectDisposition();
				
				AE.SelectNdisposition2();
			
				AE.ClickValuesDropDownList();
				
				AE.SelectValueFromDropDownFromValues();
				
				AE.ClickNextButton(driver);
				chiledTest.log(Status.INFO, "Next Button is Clicked");
				Thread.sleep(8000);
				
				/*
				

*/
	}
	
	
	@Test(priority=4)
	public void AddCheckpointInMiddeleOfExecution() throws InterruptedException {
		CheckPointPageTest CC = new CheckPointPageTest(driver);
		AuditExecutionPageTest AE = new AuditExecutionPageTest(driver);
		chiledTest = parentTest.createNode("Adding new checkpoint during audit execution process.");
		AE.MoveToAddCheckpointBTN();
		Thread.sleep(2000);
	//	AE.ClickAddCheckpointButton();
		AE.ClickAddCheckpointByJavascript();
		CC.ClickSelectGroups();
		String SG = Lib.getCellValue(XLPATH, "Check Point", 231, 0);
		CC.ArrowDownAndSelectGroupFromDropDown(SG);
		chiledTest.log(Status.INFO, "Group selected from drop-down.");
		//Passing the Values to the Enter Checkpoint intent
		String ECI5 = Lib.getCellValue(XLPATH, "Check Point", 125, 0);
		CC.SetEnterCheckpointintent(ECI5, driver);
		chiledTest.log(Status.INFO, "Checkpoint intent is Entered");

		//Passing the Values to the Description
		String DS5 = Lib.getCellValue(XLPATH, "Check Point", 131, 0);
		CC.SetDescription(DS5);
		chiledTest.log(Status.INFO, "Description is Entered");

		//clicking on the Expected action from auditor
		CC.ClickExpectedactionfromauditor(driver);

		//Passing the Values to Expected Action From Auditor
		String EA5 = Lib.getCellValue(XLPATH, "Check Point", 215, 0);
		CC.SetExpectedActionFromAuditor(EA5);
		chiledTest.log(Status.INFO, "Verify Option is Selected Under Expected Action From Auditor");

		//Clicking on the Matched Text
		CC.ClickMatched();

		//Scroll Downward
		AE.MOveToSubmitBTNInAddCheckpointInMiddleOFExecution();
		
		
		

		//Passing the Values to Yes Disposition
		String YD5 = Lib.getCellValue(XLPATH, "Check Point", 177, 0);
		CC.SetYesDisposition1(YD5,driver);

		//Passing the Values to No Disposition
		String ND5 = Lib.getCellValue(XLPATH, "Check Point", 184, 0);
		CC.SetNoDisposition1(ND5,driver);

		//Passing the Values to Partial Disposition
		String PD5 = Lib.getCellValue(XLPATH, "Check Point", 191, 0);
		CC.SetPartialDisposition1(PD5,driver);

		//Passing the Values to NA Disposition
		String ND115 = Lib.getCellValue(XLPATH, "Check Point", 198, 0);
		CC.SetNADisposition1(ND115,driver);
		
		chiledTest.log(Status.INFO, "Disposition is selected");

		//clicking on the Risk level 
		CC.ClickRiskLevel(driver);

		//Passing the Values to Risk Level
		String RL5 = Lib.getCellValue(XLPATH, "Check Point", 206, 0);
		CC.SetRiskLevel(RL5);
		chiledTest.log(Status.INFO, "High Option is Selected Under Risk Level");

		CC.ClickMatched();

		//Passing the Values to Notes to auditors description
		String NTA5 = Lib.getCellValue(XLPATH, "Check Point", 42, 0);
		CC.SetNoticetoAuditors(NTA5);
		chiledTest.log(Status.INFO, "Notes to auditors is Entered");

		AE.MOveToSubmitBTNInAddCheckpointInMiddleOFExecution();
		//Clicking on the Submit and Create new Button
		Thread.sleep(2000);
		AE.ClcikSubmitButtonInAddCheckpointScreen();
		chiledTest.log(Status.INFO, "Submit Button is Clicked");

		//1 checkpoint
		AE.MoveToNextButtonInCheckpointExecution();
		chiledTest.log(Status.INFO, "Next Button is Clicked");
		
		//2 checkpoint
		AE.SelectClickButtonInCheckpointExecution();
		chiledTest.log(Status.INFO, "Next Button is Clicked");
		
		//3 checkpoint
		AE.MoveToNextButtonInCheckpointExecution();
		
		chiledTest.log(Status.INFO, "Next Button is Clicked");
		
		//Checkpoint 4
		Thread.sleep(3000);
		AE.getCountOfToBeAuditedForLastCheckpoint();
		String ER11 = Lib.getCellValue(XLPATH, "Audit Execution", 11, 0);
		AE.SetEnterRemarks(ER11);
		chiledTest.log(Status.INFO, "Remarks is Entered");
		//Passing the Values to Enter confidential Remarks
		String ECR11 = Lib.getCellValue(XLPATH, "Audit Execution", 26, 0);
		AE.SetEnterConfidentalRemarks(ECR11);
		chiledTest.log(Status.INFO, "Confidential Remarks is Entered");
		//Clicking on the Yes Button
		AE.ClickYesButton();
		Thread.sleep(2000);
   //     AE.SelectDisposition();
	//	AE.SelectNdisposition2();
		String IV = Lib.getCellValue(XLPATH, "Audit Execution", 40, 0);
		AE.SetEnterInputValues(IV, driver);
		chiledTest.log(Status.INFO, "Input Value is Entered");
		AE.ClickNextButton(driver);
		chiledTest.log(Status.INFO, "Next Button is Clicked");
	
		//Checkpoint 5 Test case no 543 & 570
		Thread.sleep(2000);
		AE.MoveToAddCheckpointBTN();
		Thread.sleep(2000);
		AE.selectDigitalEvidence();
		chiledTest.log(Status.INFO, "Digital evidence is Clicked");
		AE.SelectAddDigitalEvidenceFile();
		chiledTest.log(Status.INFO, "Add digital evidence button clicked.");
		AE.UploadDigitalEvidence();
		chiledTest.log(Status.INFO, "User click on choose file and upload the file.");
		
		AE.SelectAddDigitalEvidenceFile();
		AE.UploadDigitalEvidence();
		chiledTest.log(Status.INFO, "User click on choose file and  again upload the file[Multiple Digital Evidence].");
		
		//AE.UploadDigitalEvidenceELMFile();
		AE.SelectOkBTNDigitalEvidence();
		chiledTest.log(Status.INFO, "To be audited count is 1 while executing last checkpoint of group before finishing the audit.");
		//Clicking on the Yes Button
		AE.ClickYesButton();	
		AE.ClickFinishBTN(driver);
		chiledTest.log(Status.INFO, "User click on finish the audit.");
		Thread.sleep(4000);
		
	}
	
	
	
	
	
	
	
	
}
