package scripts;

import java.util.List;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;

import generic.BaseTest;
import generic.Lib;
import pom.AuditExecutionPageTest;
import pom.AuditSchedulePageTest;
import pom.AuditeeadminConfigurationPageTest;
import pom.ConfigureAuditPageTest;
import pom.GroupPageTest;
import pom.LoginPageTest;
import pom.SelfSchedulePageTest;
import pom.SideMenuPageTest;

public class ExpressModeFunctionalityTest extends BaseTest {

	//Creating the Group and Adding four Checkpoints
		@Test(priority=1)
		public void Adding_Group_Test() throws InterruptedException
		{
			LoginPageTest l=new LoginPageTest(driver);

			GroupPageTest AG = new GroupPageTest(driver);

			parentTest = extent.createTest("Multiple Auditor Functionality Which is Mapped With General Groups Test", "Testing the Functionality of the GP Multiple Auditor test");

			chiledTest = parentTest.createNode("Creating Group Test");

			System.out.println("***Multiple Auditor Functionality Which is Mapped With General Groups Test***");

			System.out.println("Creating Group Test");

			chiledTest.log(Status.INFO, "Entered User Name and Password");
			String un=Lib.getCellValue(XLPATH, "Login Credentials",3,0);
			l.setusername(un);

			String pw=Lib.getCellValue(XLPATH,"Login Credentials",3,1);
			l.setpassword(pw);

			l.ClickSigninBTN();
			chiledTest.log(Status.INFO, "Singin Button is Clicked");

			//Verifying sign in successful message is displayed
			l.verifySignedInSuccessMsgIsDisplayed(driver);
			chiledTest.log(Status.INFO, "Signed in successfully. Message is Displayed");
			
		}
	
	
	
		@Test(priority=4/*, dependsOnMethods= {"Adding_Four_CheckPoints_To_another_Group_Test"}*/)
		public void Creating_Parent_Audit_Type_Test() throws InterruptedException
		{
			ConfigureAuditPageTest CA = new ConfigureAuditPageTest(driver);

			chiledTest = parentTest.createNode("Creating Parent Audit Type Test");

			System.out.println("Creating Parent Audit Type Test");

			WebDriverWait wait = new WebDriverWait(driver, 30);

			CA.ClickScrollBar(driver);

			//Clicking on the User Manage from side menu
			CA.ClickConfigureAudit(driver);
			chiledTest.log(Status.INFO, "Configure Audit is Clicked");

			//Clicking on the configure Audit Sub menu
			CA.ClickConfigureAuditSubMenu();

			//Clicking on the Create Audit Type Button
			CA.ClickCreateAuditTypeBTN(driver);
			chiledTest.log(Status.INFO, "Create Audit Type Button is Clicked");

			//******* Begin Tab *****************************

			//Passing the Values to Audit Type Name
			String ATN = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 10, 0);
			CA.SetAuditTypeName(ATN, driver);
			chiledTest.log(Status.INFO, "Audit Name is Entered");

			//Passing the values to Select Audit Type
			String SAT = Lib.getCellValue(XLPATH, "Configure Audit Type", 23, 0);
			CA.SetSelectAuditType(SAT, driver);
			chiledTest.log(Status.INFO, "Audit type is Selected");

			//clicking on the Matching
			CA.ClickMatch();

			//Clicking on the Next Button
			CA.ClickBeginTabNextButton();
			chiledTest.log(Status.INFO, "Next Button is Clicked");

			//******* DEFINE TAB *****************************

			//Clicking on the Parent Type Audit Radio Button
			CA.ClickParentTypeAuditRadioBTN(driver);
			chiledTest.log(Status.INFO, "Parent audit type Radio Button is Clicked");

			//Clicking on the select Group 
			CA.ClickSelectGrouptype(driver);

			//Passing the values to  select Group type
			String SGT = Lib.getCellValue(XLPATH, "Configure Audit Type", 27, 0);
			CA.SetSelectGrouptype(SGT);

			//clicking on the Matching
			CA.ClickMatch();

			//Passing the Values to Select CheckPoint 
	//		String SCG = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 3, 0);
	//		CA.SetSelectCheckPointGroup(SCG, driver);

			//clicking on the Matching
	//		CA.ClickMatch();

			//Passing the Values to Select CheckPoint 
			String SCG1 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 4, 0);
			CA.SetSelectCheckPointGroup(SCG1, driver);

			//clicking on the Matching
			CA.ClickMatch();

			Thread.sleep(3000);
			//Checking the Count of the Check Points
			WebElement CheckPointsCounts = driver.findElement(By.xpath("//table[@id='tableWithSearchInner']/tbody/tr"));
			wait.until(ExpectedConditions.visibilityOf(CheckPointsCounts));
			List<WebElement> CPSixze = driver.findElements(By.xpath("//table[@id='tableWithSearchInner']/tbody/tr"));
			int Actual_CPCount = CPSixze.size();
			int Expected_CPCount = 4;
			Assert.assertEquals(Actual_CPCount, Expected_CPCount, "Check Points Count are Wrong");
			System.out.println("Displayed Total Checkpoints counts is : " + Expected_CPCount);

			//Clicking on the Next Button
			CA.ClickDefineTabNextButton();
			chiledTest.log(Status.INFO, "Next Button is Clicked");

			// ********* EVALUATE  TAB ***************************

			//Passing the Values to Low Risk Scoring
			String LR = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 76, 0);
			CA.SetLowRiskScoring(LR);
			chiledTest.log(Status.INFO, "Low Risk Scoring is Entered");

			//Passing the Values to Medium Risk Scoring
			String MR = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 67, 0);
			CA.SetMeadiumRiskScroring(MR);
			chiledTest.log(Status.INFO, "Medium Risk Scoring is Entered");

			//Passing the Values to High Risk Scoring
			String HR = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 72, 0);
			CA.SetHighRiskScoring(HR);
			chiledTest.log(Status.INFO, "High Risk Scoring is Entered");

			//Passing the Values to Zero Tolerance Risk Scoring
			String ZR = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 80, 0);
			CA.SetZeroTaleranceRiskScoring(ZR);
			chiledTest.log(Status.INFO, "Zero Talerence Risk Scoring is Entered");

			//Clicking on the Next Button
			CA.ClickEvaluteTabNextButton();
			chiledTest.log(Status.INFO, "Next Button is Clicked");

			//Verifying Would you like to configure Roles for this Audit Type? Alert is Displayed
			Alert Alert = driver.switchTo().alert();
			Alert.dismiss();

			//******** CONFIGURE  TAB **************

			//Clicking on the Select verifier
			CA.clickSelectVerifier();

			//Passing the Values to Select Verifier
			String SV = Lib.getCellValue(XLPATH, "Configure Audit Type", 58, 0);
			CA.SetSelectVerifier(SV);
			chiledTest.log(Status.INFO, "Verifier is Selected");

			//Clicking on the Match
			CA.ClickMatch();

			//Clicking on the Select TAT Type
			CA.ClickSelectTATType();

			//Passing the Values to Select TAT Type
			String ST = Lib.getCellValue(XLPATH, "Configure Audit Type", 66, 0);
			CA.SetSelectTATType(ST);
			chiledTest.log(Status.INFO, "Proposed By Auditee TAT is Selected");

			//Clicking on the Match
		//	CA.ClickMatch();



			//Clicking on the Next Button
			CA.ClickConfigureTabNextButton();
			chiledTest.log(Status.INFO, "Next Button is Clicked");

			//******************** Finalize Tab ************************

			Thread.sleep(5000);

			WebElement TotalScore = driver.findElement(By.xpath("//input[@class='audit_type_total_score form-control text-danger main-type']"));
			String TotalScoreCount = wait.until(ExpectedConditions.visibilityOf(TotalScore)).getAttribute("value");
			double d = 200;
			String Str = Double.toString(d);
		//	Assert.assertEquals(TotalScoreCount, Str, "Total Score count is showing Wrong");
			System.out.println("Diplayed Total Score is : " + Str);

			//Checking the To Count
			String Actual_TO = driver.findElement(By.xpath("//input[@id='audit_type_audit_ratings_attributes_0_to']")).getAttribute("value");
			System.out.println("TO Count is : " + Actual_TO);
			int d1 = 100;
			String Str1 = Integer.toString(d1);
		//	Assert.assertEquals(Actual_TO, Str1, "Total Score count is showing Wrong");

			//Clicking on the Add Row Button
			CA.ClickAddRow(driver);
			chiledTest.log(Status.INFO, "Add Row Button is Clicked");

			//Passing the Values to First TO
			String FT = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 85, 0);
			CA.SetFirstTo(FT, driver);

			//Passing the Values to First Out Come
			String FO = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 94, 0);
			CA.SetFirstOutCome(FO, driver);
			chiledTest.log(Status.INFO, "Out Come is Entered");

			//Clicking on the Add Row Button
			CA.ClickAddRow(driver);
			chiledTest.log(Status.INFO, "Add Row Button is Clicked");

			//Passing the Values to Second TO
			String ST1 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 86, 0);
			CA.SetSecondTo(ST1, driver);

			//Passing the Values to Second Out Come
			String SO = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 93, 0);
			CA.SetSecondOutCome(SO, driver);
			chiledTest.log(Status.INFO, "Out Come is Entered");

			//Passing the Values to Third Out Come
			String TO1 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 92, 0);
			CA.SetThirdOutCome(TO1, driver);
			chiledTest.log(Status.INFO, "Out Come is Entered");

			//Clicking on the Submit Button
			CA.ClickSubmitBTN(driver);
			chiledTest.log(Status.INFO, "Submit Button is Clicked");

			//Verifying Audit type created successfully. Success Message is Displayed
			CA.VerifyAuditTypeCreatedSuccessfullyMsgIsDisplayed(driver);
			chiledTest.log(Status.INFO, "Audit type created successfully. Success Message is Displayed");

			System.out.println("**************************************************************");

		}
	
		//Configuring the Auditee admin configuration
		@Test(priority=5, dependsOnMethods= {"Creating_Parent_Audit_Type_Test"})
		public void Auditee_Admin_Configuration_Test() throws InterruptedException
		{
			SideMenuPageTest SM = new SideMenuPageTest(driver);

			AuditeeadminConfigurationPageTest AA = new AuditeeadminConfigurationPageTest(driver);

			AuditSchedulePageTest SP = new AuditSchedulePageTest(driver);

			LoginPageTest l=new LoginPageTest(driver);

			chiledTest = parentTest.createNode("Auditee Admin Configuration Test");

			System.out.println("Auditee Admin Configuration Test");

			l.ClickProfileBTN(driver);

			l.ClickLogoutBTN();

			chiledTest.log(Status.INFO, "Entered Valid UserName and Valid Password");
			String un=Lib.getCellValue(XLPATH, "Login Credentials",3,0);
			l.setusername(un);

			String pw=Lib.getCellValue(XLPATH,"Login Credentials",3,1);
			l.setpassword(pw);

			//clicking on the Login Button
			l.ClickSigninBTN();
			chiledTest.log(Status.INFO, "Sigin Button is Clicked");

			//Verify Signed in Successfully Message is Displayed
			l.verifySignedInSuccessMsgIsDisplayed(driver);
			chiledTest.log(Status.INFO, "Signed in successfully. Success Message is Displayed");

			//clicking on the Scroll bar
			SM.ClickScrollBar();

			//clicking on the Configure audit
			SM.ClickConfigureAudit();

			//clicking on the Audoitee admin Configure under side menu
			SM.clickAuditeeAdminConfigure();

			AA.ClickSelectAuditType();

			//passing the values to Select Audit Type
			String SA = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 10, 0);
			AA.SetSetAuditType(SA);

			AA.ClickMatchedText();

			//passing the Values to Issue Assignment
			String IA = Lib.getCellValue(XLPATH, "Auditee Admin Configuration", 3, 0);
			AA.SetIssueAssignment(IA);

			AA.ClickMatchedText();

			//passing the Values to Issue Assignment
			String IA1 = Lib.getCellValue(XLPATH, "Auditee Admin Configuration", 4, 0);
			AA.SetIssueAssignment(IA1);

			AA.ClickMatchedText();

			//Passing the Values to Respond issue
			String RI = Lib.getCellValue(XLPATH, "Auditee Admin Configuration", 3, 1);
			AA.SetRespondIssue(RI);

			AA.ClickMatchedText();

			//clicking on the Save button
			AA.ClickSaveBTN();

			//Verifying Auditee configuration successfully done message is Displayed
			AA.VerifyAuditeeConfigurationSuccessfullyDoneMsGIsDisplayed();

			System.out.println("******************************");

		}
	
	
		//Testing the Functionality of the Create Audit Schedule for General Group  AuditType Test
		@Test(priority=6, dependsOnMethods= {"Auditee_Admin_Configuration_Test"})
		public void Creating_Multiple_Auditor_Schedule_Test() throws InterruptedException
		{
			AuditSchedulePageTest SP = new AuditSchedulePageTest(driver);
			SelfSchedulePageTest SC=new SelfSchedulePageTest(driver);
			LoginPageTest l=new LoginPageTest(driver);

			chiledTest = parentTest.createNode("Creating GP Multiple Auditor Schedule Test");

			System.out.println("Creating GP Multiple Auditor Schedule Test");

			l.ClickProfileBTN(driver);

			l.ClickLogoutBTN();

			chiledTest.log(Status.INFO, "Entered Valid UserName and Valid Password");
			String un=Lib.getCellValue(XLPATH, "Login Credentials",3,0);
			l.setusername(un);

			String pw=Lib.getCellValue(XLPATH,"Login Credentials",3,1);
			l.setpassword(pw);

			//clicking on the Login Button
			l.ClickSigninBTN();
			chiledTest.log(Status.INFO, "Sigin Button is Clicked");

			//Verify Signed in Successfully Message is Displayed
			l.verifySignedInSuccessMsgIsDisplayed(driver);
			chiledTest.log(Status.INFO, "Signed in successfully. Success Message is Displayed");

			SP.ClickScrollBar(driver);

			//Clicking on the Schedule 
			SP.ClickSchedule(driver);

			//Clicking on the Audit Schedule
			SP.ClickAuditSchedule(driver);
			chiledTest.log(Status.INFO, "Audit Schedule is Clicked");

			//Clicking on the Create New Schedule Button
			SP.ClickCreateNewSheduleBTN();
			chiledTest.log(Status.INFO, "Create New Schedule Button is clicked");

			//Clicking on the Select Audit Type
			SP.ClickSelectAuditType(driver);

			//Passing the Values to Select Audit type from "Configure Audit Type" sheet
			String SAT1 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 10, 0);
			SP.SetSelectAuditType(SAT1, driver);
			chiledTest.log(Status.INFO, "Audit Type is Selected");

			//Clicking on the Matched 
			SP.ClickMatched();

			//Selecting Vendor Option Under Select Auditee Type Drop Down List
			SP.ClickVendorOption(driver);

			//Clicking on the Select country/State/Location
			SP.ClickSelectCountryStateLocation(driver);

			//Passing the Values to Select country/State/Location
			String CSL1 = Lib.getCellValue(XLPATH, "Schedule", 6, 0);
			SP.SetCountryStateLocation(CSL1, driver);
			chiledTest.log(Status.INFO, "Country/State/Location is Entered");

			//Clicking on the Matched 
			SP.ClickMatched();

			//Clicking on the Select Auditee
			SP.ClickSelectAuditee(driver);

			//Passing the Values to Select Auditee
			String SA2 = Lib.getCellValue(XLPATH, "Schedule", 9, 0);
			SP.SetSelectAuditeeText(SA2, driver);
			chiledTest.log(Status.INFO, "Select Auditee is Entered");

			//Clicking on the Matched 
			SP.ClickMatched();

			//Clicking on the Start Date
			SP.ClickStartDate();

			//Selecting the today Date under Start Date
		//	SP.ClickTodayStartDate(driver);

			//Clicking on the End date
			SP.ClickEndDate();
			
			//Review period new test case by Manthan
			SC.SelectReviewPeriodFrom();
			chiledTest.log(Status.INFO, "Select review period from date.");
			
			SC.SelectReviewPeriodTo();
			chiledTest.log(Status.INFO, "Select review period to date.");
			
			

			//Selecting the Today date under End Date
		//	SP.ClickTodayEndDate(driver);

			//Clicking on the Multiple Auditor check box
		//	SP.ClickMultipleAuditorBTN();

			//Selecting 1st Auditor
	//		String MA = Lib.getCellValue(XLPATH, "Schedule", 33, 0);
	//		SP.SetMultipleAuditor(MA);
	//		chiledTest.log(Status.INFO, "Auditor is Selected");

			//Clicking on the Matched 
	//		SP.ClickMatched();

			//Selecting 2nd Auditor
			String MA1 = Lib.getCellValue(XLPATH, "Schedule", 34, 0);
			SP.SetMultipleAuditor(MA1);
			chiledTest.log(Status.INFO, "Auditor is Selected");

			//Clicking on the Matched
		//	SP.ClickMatched();

			//checking Sub audit check box and Sub audits drop down is in disabled mode
	//		SP.VerifySubAuditsInDisabledMode();

			//Clicking on the Group Check box
	//		SP.ClickGroupCheckBox();
	//        Thread.sleep(4000);
			//selecting 1st Group for 1st auditor
	//        WebElement group1=driver.findElement(By.xpath("(//div[@class='select2-container select2-container-multi full-width groups_list super_admin_groups_list'])[1]"));
	//        group1.click();
	//        Thread.sleep(2000);
	//        driver.findElement(By.xpath("(//div[@class='select2-result-label'])[1]")).click();
	//        Thread.sleep(2000);
	//        driver.findElement(By.xpath("//div[@id='s2id_mapped_auditors_1_group_ids_']")).click();
	 //       Thread.sleep(2000);
	 //       driver.findElement(By.xpath("//div[text()='MUL Auditor 14']")).click();
			
			//Clicking on the Save Button
			SP.ClickSaveBTN(driver);
			chiledTest.log(Status.INFO, "Save Button is Clicked");

			//Verifying Schedule created successfully Success Message is Displayed
//			SP.VerifyScheduleCreatedSuccessfullyMSGIsDisplayed(driver);
//			chiledTest.log(Status.INFO, "Schedule created successfully. Success Message is displayed");

			System.out.println("****************************************************");

		}

	
		

		//Testing the Functionality of the Audit Execution page
		@Test(priority=7, dependsOnMethods= {"Creating_Multiple_Auditor_Schedule_Test"})
		public void Executing_The_Schedule_By_2nd_Auditor_Through_Express_Mode_Test() throws InterruptedException
		{
			LoginPageTest l=new LoginPageTest(driver);

			AuditExecutionPageTest AE = new AuditExecutionPageTest(driver);

			Actions action = new Actions(driver);

			WebDriverWait wait = new WebDriverWait(driver, 20);

			chiledTest = parentTest.createNode("Executing The Schedule By 2nd Auditor Through Express mode Test");

			System.out.println("Executing The Schedule By 2nd Auditor Through Express mode Test");

			l.ClickProfileBTN(driver);

			l.ClickLogoutBTN();

			chiledTest.log(Status.INFO, "Entered Valid UserName and Valid Password");
			String un=Lib.getCellValue(XLPATH, "Login Credentials",42,0);
			l.setusername(un);

			String pw=Lib.getCellValue(XLPATH,"Login Credentials",42,1);
			l.setpassword(pw);

			//clicking on the Login Button
			l.ClickSigninBTN();
			chiledTest.log(Status.INFO, "Sigin Button is Clicked");

			//Verify Signed in Successfully Message is Displayed
			l.verifySignedInSuccessMsgIsDisplayed(driver);
			chiledTest.log(Status.INFO, "Signed in successfully. Success Message is Displayed");

			//Passing the General Parent Audit type to Audit Type
			String AT2 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 10, 0);
			AE.SetAuditType(AT2, driver);
			chiledTest.log(Status.INFO, "Audit Type is Searched");

			AE.ClickMatched();

			//Checking reject Reassign and edit buttons should not display
		//	AE.VerifyRejectReassignEditButtonsShouldNotBeDisplay();

			//Clicking on the Accept Button
			AE.ClickAcceptBTN(driver);
			chiledTest.log(Status.INFO, "Accept Button is Clicked");

			//Verifying Audit accepted successfully Success Message is Displayed
		//	AE.VerifyAuditAcceptedSuccesfullyMSGIsDisplayed(driver);
		//	chiledTest.log(Status.INFO, "Audit accepted successfully Success Message is Displayed");

			driver.navigate().refresh();

			System.out.println("************** Executing the 1st Group *****************");

			chiledTest.log(Status.INFO, "************** Executing the 1st Group *****************");

			//Passing the General Parent Audit type to Audit Type
			String AT3 = Lib.getCellValue(XLPATH, "GP Multiple Auditor", 10, 0);
			AE.SetAuditType(AT3, driver);

			AE.ClickMatched();

			//Clicking on the Not started Button
			AE.ClickNotStartedBTN(driver);
			chiledTest.log(Status.INFO, "Start Button Is Clicked");


			//Clicking on the Express Button
			AE.ClickExpress(driver);
			chiledTest.log(Status.INFO, "Express Button is clicked");

			System.out.println("*****Dragging 1st checkpoint to Partial Compliance********");

			chiledTest.log(Status.INFO, "*****Dragging 1st checkpoint to Patial Compliance********");

			Thread.sleep(2000);

			WebElement CP1 = driver.findElement(By.xpath("//ul[@id='sortable1']/li[1]"));
			wait.until(ExpectedConditions.elementToBeClickable(CP1));
			WebElement No = driver.findElement(By.xpath("//ul[@id='sortable4']"));
			wait.until(ExpectedConditions.visibilityOf(No));
			action.dragAndDrop(CP1, No).build(). perform();
			System.out.println("First Checkpoint is Dragged to No");
			chiledTest.log(Status.INFO, "First Checkpoint is Dragged to No");

			System.out.println("*****Dragging 2nd checkpoint to Partial Compliance********");

			chiledTest.log(Status.INFO, "*****Dragging 2nd checkpoint to Patial Compliance********");

			Thread.sleep(2000);

			WebElement CP2 = driver.findElement(By.xpath("//ul[@id='sortable1']/li[1]"));
			wait.until(ExpectedConditions.elementToBeClickable(CP2));
			WebElement Yes = driver.findElement(By.xpath("//ul[@id='sortable2']"));
			wait.until(ExpectedConditions.visibilityOf(Yes));
			action.dragAndDrop(CP2, Yes).build(). perform();
			System.out.println("2nd Checkpoint is Dragged to Yes");
			chiledTest.log(Status.INFO, "2nd Checkpoint is Dragged to Yes");

			System.out.println("*****Dragging 3rd checkpoint to Partial Compliance********");

			chiledTest.log(Status.INFO, "*****Dragging 3rd checkpoint to Patial Compliance********");

			Thread.sleep(2000);

			WebElement CP3 = driver.findElement(By.xpath("//ul[@id='sortable1']/li[1]"));
			wait.until(ExpectedConditions.elementToBeClickable(CP3));
			WebElement Yes1 = driver.findElement(By.xpath("//ul[@id='sortable2']"));
			wait.until(ExpectedConditions.visibilityOf(Yes1));
			action.dragAndDrop(CP3, Yes1).build(). perform();
			System.out.println("3rd Checkpoint is Dragged to Yes");
			chiledTest.log(Status.INFO, "3rd Checkpoint is Dragged to Yes");

			System.out.println("*****Dragging 4th checkpoint to Partial Compliance********");

			chiledTest.log(Status.INFO, "*****Dragging 4th checkpoint to Partial Compliance********");

			Thread.sleep(2000);

			WebElement CP4 = driver.findElement(By.xpath("//ul[@id='sortable1']/li[1]"));
			wait.until(ExpectedConditions.elementToBeClickable(CP4));
			WebElement Partial = driver.findElement(By.xpath("//ul[@id='sortable3']"));
			wait.until(ExpectedConditions.visibilityOf(Partial));
			action.dragAndDrop(CP4, Partial).build(). perform();
			System.out.println("4th Checkpoint is Dragged to Partial");
			chiledTest.log(Status.INFO, "4th Checkpoint is Dragged to Partial");

			//Clicking on the Next Button
			AE.ClickExpressModeVerifyTabNextBTN(driver);
			chiledTest.log(Status.INFO, "Next Button is Clicked");

			//************ Partial Tab **********

			AE.VerifyPartialTabIsDisplayed(driver);

			//Passing the Values to 1st Sample Passed
			String FO = Lib.getCellValue(XLPATH, "RSL Scenarios 5", 105, 0);
			AE.SetFirstSamplePassedValue(FO);
			chiledTest.log(Status.INFO, "50 is Enterd Under Smaple Passed");

			//Passing the Values to 1st Sample Reviewed
			String FM = Lib.getCellValue(XLPATH, "RSL Scenarios 5", 102, 0);
			AE.SetFirstSampleReviewed(FM);
			chiledTest.log(Status.INFO, "100 is Enterd Under Smaple Reviewed");
			

			//Clicking on the Next Button
			AE.ClickExpressModePartialTabNextBTN(driver);
			chiledTest.log(Status.INFO, "Next Button is Clicked");
			
			

			//******************* Input Tab ************

			Thread.sleep(3000);

			//Selecting the 1st Values under 1st Values Drop down list
			WebElement SelectValues = driver.findElement(By.xpath("//ul[@class='cps inputs']/li[2]//select[@id='input_value']/option[2]"));
			wait.until(ExpectedConditions.visibilityOf(SelectValues)).click();
			System.out.println("Values is Selected");
			Thread.sleep(5000);
			//Selecting the Values under 2nd Values Drop down list
	//		WebElement SelectValues1 = driver.findElement(By.xpath("//ul[@class='cps inputs']/li[3]//select[@id='input_value']/option[2]"));
	//		wait.until(ExpectedConditions.visibilityOf(SelectValues1)).click();
	//		System.out.println("Values is Selected");
	//		Thread.sleep(5000);
			//passing the values to Text
	//		String TT = Lib.getCellValue(XLPATH, "Audit Execution", 41, 0);
	//		AE.SetFirstText(TT);
	//		Thread.sleep(5000);
			//Passing the Values to 1st Text and Number
			String TN = Lib.getCellValue(XLPATH, "Audit Execution", 42, 0);
			AE.SetTextAndNumber(TN);
	//		Thread.sleep(5000);
   //       AE.EnterInputInTextAndNumberField(TN);
			//Clicking on the Next Button
	        Thread.sleep(5000);
			AE.ClickExpressModeInputTabNextBTN(driver);
			chiledTest.log(Status.INFO, "Next Butto is Clicked");

			//************** Summary Tab ************

			//Passing the Values to Remarks
			String ER = Lib.getCellValue(XLPATH, "Audit Execution", 107, 0);
			AE.SetExpressRemarks(ER);
			chiledTest.log(Status.INFO, "Remarks is Entered");

			//Clicking on the Submit Button
			AE.ClickExpressModeSubmitButton(driver);
			chiledTest.log(Status.INFO, "Submit Butto is Clicked");

			//Checking Audit Submitted Success Message is Displayed or not
//			AE.VerifyAuditSubmittedSuccessfullyMSGIsDisplayed(driver);
//			chiledTest.log(Status.INFO, "Audit Submitted Success Message is Displayed");

			System.out.println("*******************************");

		}
		
		
		
		
		
		
	
	
	
	
	
	
	
	
	
	
	
	
}
